package sample.ether.weather

import arch.ether.IProducer
import sample.ether.city.Austin
import sample.ether.city.Dallas


/**
 * Publisher of [WeatherData] using the autogenerated [WeatherDataProducer]
 *
 * A Publisher can also be created by extending [AbstractWeatherDataPublisher]
 */
class WeatherDataPublisher : IProducer {

    private val weatherProducer = WeatherDataProducer()
    private val weatherTriggerDisposable = weatherProducer.triggerObservable().subscribe {
        when (it) {
            Austin -> weatherProducer.publish(WeatherData(70f, 65f))
            Dallas -> weatherProducer.publish(WeatherData(75f, 55f))
        }
    }

    override fun destroy() {
        weatherTriggerDisposable.dispose()
        weatherProducer.destroy()
    }

}